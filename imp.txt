// Add endpoint to receive webhook events
app.post("/webhook", express.raw({ type: "application/json" }), (req, res) => {
    const payload = req.body;
    const sig = req.headers["stripe-signature"];

    let event;

    try {
        event = stripe.webhooks.constructEvent(payload, sig, process.env.STRIPE_WEBHOOK_SECRET);
    } catch (err) {
        console.error("Webhook Error:", err.message);
        return res.status(400).send(`Webhook Error: ${err.message}`);
    }

    // Handle the event
    if (event.type === "payment_intent.succeeded") {
        const paymentIntent = event.data.object;
        const paymentIntentId = paymentIntent.id;

        // Update your database or perform other actions
        // based on successful payment event
        // ...

        console.log("PaymentIntent was successful!");

        res.json({ received: true });
    } else if (event.type === "payment_intent.payment_failed") {
        console.error("PaymentIntent failed");
        res.json({ received: true });
    }
});



// app.get('/',async(req,res)=>{
//   try {
//     const provider = new ethers.JsonRpcProvider(url);
//     const wallet = new ethers.Wallet(process.env.PRIVATE_KEY,provider);
//     const signer = wallet.connect(provider);
//     const tokenPresaleContract = new ethers.Contract(tokenPresaleaddress, tokenPresale.abi, provider)
//     const tokenPresaleContractWithSigner = tokenPresaleContract.connect(signer);
//     const RecieveTokens = await tokenPresaleContractWithSigner.registerFiatUsers(signer.address, );
//     const buyReciept = await RecieveTokens.wait();
//     console.log(tokenPresaleContractWithSigner);
//   } catch (error) {
//     console.log(error);
//   }
// })




# STRIPE_WEB_HOOK = 'whsec_dd44a782d46661808b62e479f949ee12845b2aea987ab9265f83e9573eaed0c8'

./stripe login
./stripe listen --forward-to localhost:7000/api/webhook